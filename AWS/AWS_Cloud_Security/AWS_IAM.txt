	• Use IAM to manage access to AWS resources - 
		○ A resource is an entity in an AWS account that you can work with
		○ Example resources; An Amazon EC2 instance or an Amazon S3 bucket
	• Define fine-grained access rights - 
		○ Who can access the resource
		○ Which resource can be accessed and what can the user do to the resource
		○ How resources can be accessed
        - IAM is a no-cost AWS account feature
    - IAM: Essential Components
        • IAM User
            ○ A person or application that can authenticate with an AWS account
        • IAM Group
		    ○ A collection of IAM users that are granted identical authorization
        • IAM policy
		    ○ The document that defines which resources can be accessed and the level of access to each resource
        • IAM role
            - Useful mechanism to grant a set of permissions for making AWS service requests.
    - IAM: authorization
        • Assign permissions by creating an IAM policy
	    • Permissions determine which resources and operations are allowed:
		    ○ All permissions are implicitly denied by default
		    ○ If something is explicitly denied, it is never allowed
        • Best practice: Follow the principle of least privilege
        - Note: the scope of IAM service configs is global. Settings apply across all AWS regions.
    - IAM Policies
    	• An IAM policy is a document that defines permissions
		    ○ Enables fine-grained access control
	    • Two types of policies – identity-based and resource-based
	    • Identity-based policies - 
		    ○ Attach a policy to any IAM entity
			    ▪ An IAM user, group or role
		    ○ Can be further categorized as 
			    ▪ Managed Policies – Standalone identity-based policies that you can attach to multiple users, groups, and roles
			    ▪ Inline Policies – Policies that you create and manage, and that are embedded directly into a single user group or role
		    ○ Policies specify
			    ▪ Actions that may be performed by the entity
			    ▪ Actions that may not be performed by the entity
		    ○ A single policy can be attached to multiple entities
		    ○ A single entity can have multiple policies attached to it
	    • Resource-based policies -
		    ○ Attached to a resource (such as an S3 bucket)
		    ○ Characteristics of resource-based policies
			    ▪ Specifies who has access to the resource and what actions they can perform on it
			    ▪ The policies are inline only, not managed
        - Resource-based policies are supported only by some AWS services
    - IAM groups
    	• An IAM group is a collection of IAM users
	    • A group is used to grant the same permissions to multiple users
		    ○ Permissions granted by attaching IAM policy or policies to the group
	    • A user can belong to multiple groups
	    • There is no default group
        - Groups cannot be nested
    - IAM Roles
    	• An IAM role is an IAM identity with specific permissions
        • Similar to an IAM user
            ○ Attach permissions policies to it
        • Different from an IAM user
            ○ Not uniquely associated with one person
            ○ Intended to be assumable by a person, application, or service
        • Role provides temporary security credentials
        • Examples of how IAM roles are used to delegate access
            ○ Used by an IAM user in the same AWS account as the role
            ○ Used by an AWS service – such as EC2 – in the same account as the role
            -  Used by an IAM user in a different AWS account than the role